C51 COMPILER V9.60.7.0   DS1302                                                            12/14/2023 21:26:10 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: F:\keil5\C51\BIN\C51.EXE DS1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DS13
                    -02.lst) TABS(2) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          #include <STC89C5xRC.H>
   2          #include "LCD1602.h"
   3          #include "Uart.h"
   4          
   5          //对端口重定义
   6          sbit DS1302_SCLK = P3^6;
   7          sbit DS1302_IO = P3^4;
   8          sbit DS1302_CE = P3^5;
   9          
  10          
  11          #define DS1302_SECOND 0x80
  12          #define DS1302_MINUTE 0x82 
  13          #define DS1302_HOUR 0x84 
  14          #define DS1302_DATE 0x86
  15          #define DS1302_MONTH 0x88
  16          #define DS1302_DAY 0x8a
  17          #define DS1302_YEAR 0x8c
  18          #define DS1302_WP 0x8e
  19          
  20          
  21          unsigned char DS1302_Time[] = {23, 12, 14, 20, 36, 4};
  22          //年,月,日,时,分,秒,星期
  23          
  24          void DS1302_Init()
  25          //初始化
  26          {
  27   1          DS1302_CE = 0;
  28   1          DS1302_SCLK = 0;
  29   1      }
  30          
  31          void DS1302_WriteByte(unsigned char Command, unsigned char Data)
  32          //单字节写入
  33          {   
  34   1          unsigned char i = 0;
  35   1          DS1302_CE = 1;
  36   1          for(i = 0; i < 8; i++)
  37   1          {
  38   2              DS1302_IO = Command & (0x01 << i);
  39   2              DS1302_SCLK = 1;
  40   2              //如果马上置0，时钟有可能反应不过来
  41   2              DS1302_SCLK = 0;
  42   2              //对运行速度快的单片机，可能需要加延时,这里不用
  43   2          }
  44   1      
  45   1          for(i = 0; i < 8; i++)
  46   1          {
  47   2              DS1302_CE = 1;
  48   2              DS1302_IO = Data & (0x01 << i);
  49   2              DS1302_SCLK = 1;
  50   2              DS1302_SCLK = 0;
  51   2          }
  52   1      
  53   1          DS1302_CE = 0;
  54   1          DS1302_SCLK = 0;
C51 COMPILER V9.60.7.0   DS1302                                                            12/14/2023 21:26:10 PAGE 2   

  55   1      }
  56          
  57          
  58          unsigned char DS1302_ReadByte(unsigned char Command)
  59          //单字节读取
  60          {  
  61   1          unsigned char Data = 0x00;
  62   1          unsigned char i = 0;
  63   1          Command |= 0x01;//第一位置1
  64   1          DS1302_CE = 1;
  65   1          for(i = 0; i < 8; i++)
  66   1          {
  67   2              DS1302_CE = 1;
  68   2              DS1302_IO = Command & (0x01 << i);
  69   2              DS1302_SCLK = 0;
  70   2              DS1302_SCLK = 1;
  71   2              //在最后一个循环时为上升沿
  72   2          }
  73   1      
  74   1      
  75   1          for(i = 0; i < 8; i++)
  76   1          {
  77   2              DS1302_SCLK = 1;
  78   2              //重复置1，减去一个脉冲周期
  79   2              DS1302_SCLK = 0;
  80   2              //读取一位，同时使执行结束时为0
  81   2              if(DS1302_IO)
  82   2              {
  83   3                  Data |= (0x01 << i);
  84   3                  //读取的第一位为最低位
  85   3              }
  86   2          }
  87   1      
  88   1          DS1302_CE = 0;
  89   1          DS1302_SCLK = 0;
  90   1          DS1302_IO = 0;//这里需要将IO重置，否则读取的数据会在输入数据和ff之间横跳
  91   1          return Data;
  92   1      }
  93          
  94          
  95          void DS1302_SetTime()
  96          {
  97   1          DS1302_WriteByte(DS1302_WP, 0x00);//关闭写保护
  98   1          DS1302_WriteByte(DS1302_YEAR, DS1302_Time[0] / 10 * 16 + DS1302_Time[0] % 10);//10转16进制
  99   1          DS1302_WriteByte(DS1302_MONTH, DS1302_Time[1] / 10 * 16 + DS1302_Time[1] % 10);
 100   1          DS1302_WriteByte(DS1302_DATE, DS1302_Time[2] / 10 * 16 + DS1302_Time[2] % 10);
 101   1          DS1302_WriteByte(DS1302_HOUR, DS1302_Time[3] / 10 * 16 + DS1302_Time[3] % 10);
 102   1          DS1302_WriteByte(DS1302_MINUTE, DS1302_Time[4] / 10 * 16 + DS1302_Time[4] % 10);
 103   1          DS1302_WriteByte(DS1302_SECOND, DS1302_Time[5] / 10 * 16 + DS1302_Time[5] % 10);
 104   1          DS1302_WriteByte(DS1302_DAY, DS1302_Time[6] / 10 * 16 + DS1302_Time[6] % 10);
 105   1          DS1302_WriteByte(DS1302_WP, 0x81);//打开写保护
 106   1      }
 107          
 108          
 109          void DS1302_ReadTime()
 110          {
 111   1          unsigned char Temp = 0;
 112   1          Temp = DS1302_ReadByte(DS1302_YEAR);
 113   1          DS1302_Time[0] = Temp / 16 * 10 + Temp % 16;
 114   1          Temp = DS1302_ReadByte(DS1302_MONTH);
 115   1          DS1302_Time[1] = Temp / 16 * 10 + Temp % 16;
 116   1          Temp = DS1302_ReadByte(DS1302_DATE);
C51 COMPILER V9.60.7.0   DS1302                                                            12/14/2023 21:26:10 PAGE 3   

 117   1          DS1302_Time[2] = Temp / 16 * 10 + Temp % 16;
 118   1          Temp = DS1302_ReadByte(DS1302_HOUR);
 119   1          DS1302_Time[3] = Temp / 16 * 10 + Temp % 16;
 120   1          Temp = DS1302_ReadByte(DS1302_MINUTE);
 121   1          DS1302_Time[4] = Temp / 16 * 10 + Temp % 16;
 122   1          Temp = DS1302_ReadByte(DS1302_SECOND);
 123   1          DS1302_Time[5] = Temp / 16 * 10 + Temp % 16;
 124   1          Temp = DS1302_ReadByte(DS1302_DAY);
 125   1          DS1302_Time[6] = Temp / 16 * 10 + Temp % 16;
 126   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    499    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
